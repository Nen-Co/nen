name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-cross-platform:
    name: Build artifacts (matrix)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux-gnu
            platform: linux
            arch: x86_64
            archive: tar.gz
          - os: macos-latest
            target: x86_64-macos-none
            platform: macos
            arch: x86_64
            archive: tar.gz
          - os: macos-latest
            target: aarch64-macos-none
            platform: macos
            arch: aarch64
            archive: tar.gz
          - os: windows-latest
            target: x86_64-windows-gnu
            platform: windows
            arch: x86_64
            archive: zip

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Zig 0.15.1
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build for target
        run: |
          set -euo pipefail
          echo "Building for ${{ matrix.target }}"
          zig build --release=safe -Dtarget=${{ matrix.target }}

      - name: Gather binaries
        run: |
          mkdir -p release/${{ matrix.platform }}-${{ matrix.arch }}
          cp -r zig-out/* release/${{ matrix.platform }}-${{ matrix.arch }}/

      - name: Archive artifacts
        run: |
          cd release
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -r nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.zip ${{ matrix.platform }}-${{ matrix.arch }}
          else
            tar -czf nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz ${{ matrix.platform }}-${{ matrix.arch }}
          fi

      - name: Compute checksums
        run: |
          cd release
          if [ "${{ matrix.archive }}" = "zip" ]; then
            sha256sum nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.zip > nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.zip.sha256
          else
            sha256sum nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz > nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz.sha256
          fi

      - name: Upload artifacts to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nen-${{ matrix.platform }}-${{ matrix.arch }}
          path: release/nen-${{ steps.version.outputs.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }}.*

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-cross-platform]
    if: startsWith(github.ref, 'refs/tags/')
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create Release Notes
        id: release_notes
        run: |
          echo "## Nen ${{ steps.version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### 🚀 Features" >> release_notes.md
          echo "- Minimalist LLM framework in Zig" >> release_notes.md
          echo "- Zero-allocation static memory pools" >> release_notes.md
          echo "- High-performance node execution" >> release_notes.md
          echo "- Nen ecosystem integration" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 📦 Downloads" >> release_notes.md
          echo "- Linux x86_64: \`nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz\`" >> release_notes.md
          echo "- macOS x86_64: \`nen-${{ steps.version.outputs.VERSION }}-macos-x86_64.tar.gz\`" >> release_notes.md
          echo "- macOS aarch64: \`nen-${{ steps.version.outputs.VERSION }}-macos-aarch64.tar.gz\`" >> release_notes.md
          echo "- Windows x86_64: \`nen-${{ steps.version.outputs.VERSION }}-windows-x86_64.zip\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 🏗️ Installation" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "# Extract and run" >> release_notes.md
          echo "tar -xzf nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz" >> release_notes.md
          echo "./linux-x86_64/bin/nen --help" >> release_notes.md
          echo "\`\`\`" >> release_notes.md

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Nen ${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          files: release-assets/**/nen-${{ steps.version.outputs.VERSION }}-*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
