name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Zig 0.15.1
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build for Linux
        run: |
          set -euo pipefail
          zig build --release=safe
          mkdir -p release/linux-x86_64
          cp -r zig-out/* release/linux-x86_64/
          tar -czf release/nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz -C release linux-x86_64

      - name: Build for macOS
        if: runner.os == 'macOS'
        run: |
          set -euo pipefail
          zig build --release=safe
          mkdir -p release/macos-x86_64
          cp -r zig-out/* release/macos-x86_64/
          tar -czf release/nen-${{ steps.version.outputs.VERSION }}-macos-x86_64.tar.gz -C release macos-x86_64

      - name: Build for Windows
        if: runner.os == 'Windows'
        run: |
          set -euo pipefail
          zig build --release=safe
          mkdir -p release/windows-x86_64
          cp -r zig-out/* release/windows-x86_64/
          tar -czf release/nen-${{ steps.version.outputs.VERSION }}-windows-x86_64.tar.gz -C release windows-x86_64

      - name: Create Release Notes
        id: release_notes
        run: |
          echo "## Nen ${{ steps.version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### 🚀 Features" >> release_notes.md
          echo "- Minimalist LLM framework in Zig" >> release_notes.md
          echo "- Zero-allocation static memory pools" >> release_notes.md
          echo "- High-performance node execution" >> release_notes.md
          echo "- Nen ecosystem integration" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 📦 Downloads" >> release_notes.md
          echo "- Linux x86_64: \`nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz\`" >> release_notes.md
          echo "- macOS x86_64: \`nen-${{ steps.version.outputs.VERSION }}-macos-x86_64.tar.gz\`" >> release_notes.md
          echo "- Windows x86_64: \`nen-${{ steps.version.outputs.VERSION }}-windows-x86_64.tar.gz\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 🏗️ Installation" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "# Extract and run" >> release_notes.md
          echo "tar -xzf nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz" >> release_notes.md
          echo "./linux-x86_64/bin/nen --help" >> release_notes.md
          echo "\`\`\`" >> release_notes.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: Nen ${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz
          asset_name: nen-${{ steps.version.outputs.VERSION }}-linux-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS Release Asset
        if: runner.os == 'macOS'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nen-${{ steps.version.outputs.VERSION }}-macos-x86_64.tar.gz
          asset_name: nen-${{ steps.version.outputs.VERSION }}-macos-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows Release Asset
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nen-${{ steps.version.outputs.VERSION }}-windows-x86_64.tar.gz
          asset_name: nen-${{ steps.version.outputs.VERSION }}-windows-x86_64.tar.gz
          asset_content_type: application/gzip
